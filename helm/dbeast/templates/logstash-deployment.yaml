apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      initContainers:
        - name: logstash-init
          image: {{ .Values.logstash.image }}
          command:
            - sh
            - -c
            - |
              if [ -z "$(ls -A /tmp/logstash)" ]; then
                echo "Persistent volume is empty. Copying data from image..."
                cp -R /usr/share/logstash/config/* /tmp/logstash/
              else
                echo "Persistent volume is not empty. Skipping data copy."
              fi
          volumeMounts:
            - name: logstash-config-pvc
              mountPath: /tmp/logstash

      containers:
      - name: logstash
        securityContext:
          runAsUser: 0
        image: {{ .Values.logstash.image }}
        ports:
        - containerPort: 5044
        env:
        {{- range .Values.logstash.env }}
        - name: {{ .name }}
          value: {{ .value }}
        {{- end }}
        volumeMounts:
        {{- range .Values.logstash.volumes }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
      volumes:
      {{- range .Values.logstash.volumes }}
      - name: {{ .name }}
        {{- if .source.configMap }}
        configMap:
          name: {{ .source.configMap.name }}
          {{- if .source.configMap.key }}
          items:
            - key: {{ .source.configMap.key }}
              path: {{ .source.configMap.path | default .source.configMap.key }}
          {{- end }}
        {{- else if .source.persistentVolumeClaim }}
        persistentVolumeClaim:
          claimName: {{ .source.persistentVolumeClaim.claimName }}
        {{- end }}
      {{- end }}
